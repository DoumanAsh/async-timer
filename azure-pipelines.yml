strategy:
  matrix:
    linux-nightly:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: nightly
    windows-nighly:
      imageName: 'vs2017-win2016'
      rustup_toolchain: nightly
    mac-nightly:
      imageName: 'macos-10.13'
      rustup_toolchain: nightly

pool:
  vmImage: $(imageName)

steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )

  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )

  - script: cargo check --all --features no_std
    displayName: Cargo check no_std
  - script: cargo test --all
    displayName: Cargo test

  - script: cargo test --features romio_on
    displayName: cargo test Linux timer fd
    condition: eq( variables['Agent.OS'], 'Linux' )
